name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # Deploy Bicep Template to Azure
  deploy_bicep:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Bicep Template
        run: |
          az deployment group create \
            --resource-group RGroup \
            --template-file main.bicep \
            --parameters location=eastus \
            --mode Incremental

  # Build and Test Node.js Application
  build_and_test_node:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install
        working-directory: ./sample-nodejs

      - name: Run Tests
        run: npm test
        working-directory: ./sample-nodejs

  # Build and Test PHP Application
  build_and_test_php:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      - name: Install Dependencies
        run: composer install
        working-directory: ./sample-php

      - name: Run Tests
        run: php artisan test
        working-directory: ./sample-php

  # Dockerize and Push Node.js and PHP Applications to ACR
  dockerize_and_push:
    needs: [build_and_test_node, build_and_test_php]
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push Docker Image (Node.js)
        run: |
          docker build -t ${{ secrets.ACR_NAME }}/node-app:latest -f ./sample-nodejs/Dockerfile .
          docker push ${{ secrets.ACR_NAME }}/node-app:latest

      - name: Build and Push Docker Image (PHP)
        run: |
          docker build -t ${{ secrets.ACR_NAME }}/php-app:latest -f ./sample-php/Dockerfile .
          docker push ${{ secrets.ACR_NAME }}/php-app:latest

  # Deploy Applications to AKS
  deploy_to_aks:
    needs: dockerize_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1

      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group RGroup --name KitsoAks

      - name: Deploy Node.js App to AKS
        run: |
          kubectl apply -f kubernetes/node-app-deployment.yaml
          kubectl apply -f kubernetes/node-app-service.yaml

      - name: Deploy PHP App to AKS
        run: |
          kubectl apply -f kubernetes/php-app-deployment.yaml
          kubectl apply -f kubernetes/php-app-service.yaml
